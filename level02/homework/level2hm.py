# 4) print ბრძანება 40-ჯერ გამოიყენეთ და დაბეჭდეთ თქვენთვის სასურველი ინფორმაცია

print("Programming Languages")
print(str(1) + ". " + "python")
print(str(2) + ". " + "HTML")
print(str(3) + ". " + "Java")
print(str(4) + ". " + "C")
print(str(5) + ". " + "C++")
print(str(6) + ". " + "C#")
print(str(7) + ". " + "JavaScript")
print(str(8) + ". " + "PHP")
print(str(9) + ". " + "VB.NET")
print(str(10) + ". " + "R")
print(str(11) + ". " + "SQL")
print(str(12) + ". " + "Go")
print(str(13) + ". " + "Swift")
print(str(14) + ". " + "Perl")
print(str(15) + ". " + "Assembly languages")
print(str(16) + ". " + "Ruby")
print(str(17) + ". " + "MATLAB")
print(str(18) + ". " + "Classic Visual Basic")
print(str(19) + ". " + "Apache Groovy")
print(str(20) + ". " + "Objective-C")
print(str(21) + ". " + "Rust")
print(str(22) + ". " + "SAS")
print(str(23) + ". " + "Scratch")
print(str(24) + ". " + "D")
print(str(25) + ". " + "Dart")
print(str(26) + ". " + "PL/SQL")
print(str(27) + ". " + "Logo")
print(str(28) + ". " + "Delphi")
print(str(29) + ". " + "COBOL")
print(str(30) + ". " + "Kotlin")
print(str(31) + ". " + "OpenEdge ABL")
print(str(32) + ". " + "Lisp")
print(str(33) + ". " + "Apex")
print(str(34) + ". " + "Lua")
print(str(35) + ". " + "Fortran")
print(str(36) + ". " + "Haskell")
print(str(37) + ". " + "Hack")
print(str(38) + ". " + "VBScript")
print(str(39) + ". " + "Visual FoxPro")



# 7) გააკეთეთ 10 მაგალითი ყველა ოპერატორზე(+,-,*,/,//)

    # 7.1 "+"
print(1 + 0)
print(9 + 1)
print(99 + 1)
print(999 + 1)
print(9999 + 1)
print(99999 + 1)
print(999999 + 1)
print(9999999 + 1)
print(99999999 + 1)
print(999999999 + 1)
print(9999999999 + 1)

    # 7.2 "-"
print(10000000000 - 1)
print(1000000000 - 1)
print(100000000 - 1)
print(10000000 - 1)
print(1000000 - 1)
print(100000 - 1)
print(10000 - 1)
print(1000 - 1)
print(100 - 1)
print(10 - 1)

    # 7.3 "*"
print(10 * 1)
print(100 * 1)
print(1000 * 1)
print(10000 * 1)
print(100000 * 1)
print(1000000 * 1)
print(10000000 * 1)
print(100000000 * 1)
print(1000000000 * 1)
print(10000000000 * 1)
print(100000000000 * 1)

    # 7.4 "/"
print(10000000000 / 1)
print(1000000000 / 1)
print(100000000 / 1)
print(10000000 / 1)
print(1000000 / 1)
print(100000 / 1)
print(10000 / 1)
print(1000 / 1)
print(100 / 1)
print(10 / 1)
print(1 / 1)

    # 7.5 "//"
print(10 // 1)
print(100 // 1)
print(1000 // 1)
print(10000 // 1)
print(100000 // 1)
print(1000000 // 1)
print(10000000 // 1)
print(100000000 // 1)
print(1000000000 // 1)
print(10000000000 // 1)
print(100000000000 // 1)